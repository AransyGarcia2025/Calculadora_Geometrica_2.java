package Calculadora_Geometrica_2;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Calculadora_Geometrica_2 {

    // Arreglo para almacenar resultados
    static String[] resultados = new String[100];
    static int contadorResultados = 0;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int opcionFigura;

        do {
            System.out.println("\n=== Calculadora Geométrica ===");
            System.out.println("Seleccione la figura geométrica:");
            System.out.println("1. Círculo");
            System.out.println("2. Cuadrado");
            System.out.println("3. Triángulo");
            System.out.println("4. Rectángulo");
            System.out.println("5. Pentágono");
            System.out.println("6. Ver resultados previos");
            System.out.println("0. Salir");
            System.out.print("Opción: ");

            opcionFigura = leerEntero(scanner);

            switch (opcionFigura) {
                case 1 -> calcularCirculo(scanner);
                case 2 -> calcularCuadrado(scanner);
                case 3 -> calcularTriangulo(scanner);
                case 4 -> calcularRectangulo(scanner);
                case 5 -> calcularPentagono(scanner);
                case 6 -> mostrarResultados();
                case 0 -> System.out.println("Saliendo de la calculadora. ¡Hasta luego!");
                default -> System.out.println("Opción no válida. Intente de nuevo.");
            }

        } while (opcionFigura != 0);

        scanner.close();
    }

    static void mostrarResultados() {
        System.out.println("\n=== Resultados Previos ===");
        if (contadorResultados == 0) {
            System.out.println("No se han realizado operaciones todavía.");
        } else {
            for (int i = 0; i < contadorResultados; i++) {
                System.out.println((i + 1) + ". " + resultados[i]);
            }
        }
    }

    static void guardarResultado(String resultado) {
        if (contadorResultados < resultados.length) {
            resultados[contadorResultados] = resultado;
            contadorResultados++;
        }
    }

    static void calcularCirculo(Scanner scanner) {
        System.out.println("\n-- Círculo --");
        double radio = pedirDouble(scanner, "Ingrese el radio del círculo: ");
        int operacion = pedirOperacion(scanner);
        if (operacion == 1) {
            double area = Math.PI * Math.pow(radio, 2);
            String resultado = "Área del círculo: " + area;
            System.out.println(resultado);
            guardarResultado(resultado);
        } else {
            double perimetro = 2 * Math.PI * radio;
            String resultado = "Perímetro del círculo: " + perimetro;
            System.out.println(resultado);
            guardarResultado(resultado);
        }
    }

    static void calcularCuadrado(Scanner scanner) {
        System.out.println("\n-- Cuadrado --");
        double lado = pedirDouble(scanner, "Ingrese el lado del cuadrado: ");
        int operacion = pedirOperacion(scanner);
        if (operacion == 1) {
            double area = lado * lado;
            String resultado = "Área del cuadrado: " + area;
            System.out.println(resultado);
            guardarResultado(resultado);
        } else {
            double perimetro = 4 * lado;
            String resultado = "Perímetro del cuadrado: " + perimetro;
            System.out.println(resultado);
            guardarResultado(resultado);
        }
    }

    static void calcularTriangulo(Scanner scanner) {
        System.out.println("\n-- Triángulo --");
        int operacion = pedirOperacion(scanner);
        if (operacion == 1) {
            double base = pedirDouble(scanner, "Ingrese la base del triángulo: ");
            double altura = pedirDouble(scanner, "Ingrese la altura del triángulo: ");
            double area = (base * altura) / 2;
            String resultado = "Área del triángulo: " + area;
            System.out.println(resultado);
            guardarResultado(resultado);
        } else {
            double lado1 = pedirDouble(scanner, "Ingrese el primer lado del triángulo: ");
            double lado2 = pedirDouble(scanner, "Ingrese el segundo lado del triángulo: ");
            double lado3 = pedirDouble(scanner, "Ingrese el tercer lado del triángulo: ");
            double perimetro = lado1 + lado2 + lado3;
            String resultado = "Perímetro del triángulo: " + perimetro;
            System.out.println(resultado);
            guardarResultado(resultado);
        }
    }

    static void calcularRectangulo(Scanner scanner) {
        System.out.println("\n-- Rectángulo --");
        double base = pedirDouble(scanner, "Ingrese la base del rectángulo: ");
        double altura = pedirDouble(scanner, "Ingrese la altura del rectángulo: ");
        int operacion = pedirOperacion(scanner);
        if (operacion == 1) {
            double area = base * altura;
            String resultado = "Área del rectángulo: " + area;
            System.out.println(resultado);
            guardarResultado(resultado);
        } else {
            double perimetro = 2 * (base + altura);
            String resultado = "Perímetro del rectángulo: " + perimetro;
            System.out.println(resultado);
            guardarResultado(resultado);
        }
    }

    static void calcularPentagono(Scanner scanner) {
        System.out.println("\n-- Pentágono --");
        int operacion = pedirOperacion(scanner);
        if (operacion == 1) {
            double perimetro = pedirDouble(scanner, "Ingrese el perímetro del pentágono: ");
            double apotema = pedirDouble(scanner, "Ingrese la apotema del pentágono: ");
            double area = (perimetro * apotema) / 2;
            String resultado = "Área del pentágono: " + area;
            System.out.println(resultado);
            guardarResultado(resultado);
        } else {
            double lado = pedirDouble(scanner, "Ingrese el lado del pentágono: ");
            double perimetro = 5 * lado;
            String resultado = "Perímetro del pentágono: " + perimetro;
            System.out.println(resultado);
            guardarResultado(resultado);
        }
    }

    static int pedirOperacion(Scanner scanner) {
        int operacion;
        do {
            System.out.println("Seleccione la operación:");
            System.out.println("1. Área");
            System.out.println("2. Perímetro");
            System.out.print("Opción: ");
            operacion = leerEntero(scanner);
            if (operacion != 1 && operacion != 2) {
                System.out.println("Opción inválida. Intente de nuevo.");
            }
        } while (operacion != 1 && operacion != 2);
        return operacion;
    }

    static int leerEntero(Scanner scanner) {
        while (true) {
            try {
                return scanner.nextInt();
            } catch (InputMismatchException e) {
                System.out.print("Entrada inválida. Ingrese un número entero: ");
                scanner.next(); // Limpiar entrada
            }
        }
    }

    static double pedirDouble(Scanner scanner, String mensaje) {
        double valor;
        while (true) {
            try {
                System.out.print(mensaje);
                valor = scanner.nextDouble();
                if (valor <= 0) {
                    System.out.println("El valor debe ser mayor que cero.");
                } else {
                    return valor;
                }
            } catch (InputMismatchException e) {
                System.out.println("Entrada inválida. Ingrese un número válido.");
                scanner.next(); // Limpiar entrada
            }
        }
    }
}
